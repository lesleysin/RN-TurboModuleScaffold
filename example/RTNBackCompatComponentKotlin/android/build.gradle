buildscript {
  ext.safeExtGet = {prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }
  repositories {
    google()
    gradlePluginPortal()
  }
  dependencies {
    classpath("com.android.tools.build:gradle:7.1.1")
    classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10')
  }
}

def isNewArchitectureEnabled() {
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

apply plugin: 'com.android.library'
apply plugin: 'com.facebook.react'
apply plugin: 'kotlin-android'

android {
  compileSdkVersion safeExtGet('compileSdkVersion', 31)
  
  defaultConfig {
        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", "true")
        minSdkVersion safeExtGet('minSdkVersion', 21)
        targetSdkVersion safeExtGet('targetSdkVersion', 31)
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        disable 'GradleCompatible'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
      main {
        if (isNewArchitectureEnabled()) {
          java.srcDirs += ['src/newarch', "${project.buildDir}/generated/source/codegen/java"]
        } else {
          java.srcDirs += ['src/oldarch']
        }
      }
    }
}

repositories {
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url "$projectDir/../node_modules/react-native/android"
  }
  mavenCentral()
  google()
}

dependencies {
  implementation 'com.facebook.react:react-native:+'
}


 if (isNewArchitectureEnabled()) {
     react {
         libraryName = "RTNBackCompatComponentKotlin"
         codegenJavaPackageName = "com.RTNBackCompatComponentKotlin"
         jsRootDir = file("../js/")
         reactNativeDir = rootProject.file("../node_modules/react-native/")
         codegenDir = rootProject.file("../node_modules/react-native-codegen/")
  }
 }